{"ast":null,"code":"var _jsxFileName = \"/Users/zakariaalmardaee/csfolder/twiscord/frontend/src/context/userContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { useNavigate, useNavigation } from \"react-router\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [userToken, setUserToken] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const signup = async userData => {\n    const url = \"http://127.0.0.1:5000/signup\";\n    try {\n      const response = await axios.post(url, userData);\n      return response;\n    } catch (error) {\n      console.error(\"Signup Error:\", error.response.data);\n      return error.response.data;\n    }\n  };\n  const login = async (email, password) => {\n    const url = \"http://127.0.0.1:5000/login\";\n    setIsLoading(true);\n    try {\n      const response = await axios.post(url, {\n        email,\n        password\n      });\n      if (response.status === 200 && response.data.token) {\n        setUserData(response.data.user);\n        setUserToken(response.data.token);\n        localStorage.setItem(\"userData\", JSON.stringify(response.data.user));\n        localStorage.setItem(\"userToken\", response.data.token);\n        console.log(\"login success:\", response.data);\n        return response;\n      }\n    } catch (error) {\n      console.error(\"login Error:\", error.response.data);\n      return error.response.data;\n    }\n    setIsLoading(false);\n  };\n  useEffect(() => {\n    const isLoggedIn = async () => {\n      setIsLoading(true); // Start loading\n      const storedToken = localStorage.getItem(\"userToken\");\n      const storedUser = localStorage.getItem(\"userData\");\n      if (storedToken && storedUser) {\n        setUserToken(storedToken);\n        setUserData(JSON.parse(storedUser));\n      }\n      setIsLoading(false); // End loading\n    };\n    isLoggedIn();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      signup,\n      login,\n      isLoading,\n      userData,\n      userToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"0ND/sjCqMIQlANhT4Dit27Bc/C4=\", false, function () {\n  return [useNavigate];\n});\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","useNavigation","axios","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","userToken","setUserToken","userData","setUserData","isLoading","setIsLoading","navigate","signup","url","response","post","error","console","data","login","email","password","status","token","user","localStorage","setItem","JSON","stringify","log","isLoggedIn","storedToken","getItem","storedUser","parse","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zakariaalmardaee/csfolder/twiscord/frontend/src/context/userContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\"\nimport { useNavigate, useNavigation } from \"react-router\";\nimport axios from \"axios\";\n\nexport const UserContext = createContext();\n\nexport const UserProvider = ({ children }) => {\n  const [userToken, setUserToken] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false)\n  const navigate = useNavigate()\n\n  const signup = async (userData) => {\n    const url = \"http://127.0.0.1:5000/signup\";\n    try {\n      const response = await axios.post(url, userData);\n      return response;\n    } catch (error) {\n      console.error(\"Signup Error:\", error.response.data);\n      return error.response.data;\n    }\n  };\n\n  const login = async (email, password) => {\n    const url = \"http://127.0.0.1:5000/login\";\n    setIsLoading(true)\n    try {\n      const response = await axios.post(url, { email, password });\n      if (response.status === 200 && response.data.token) {\n        setUserData(response.data.user);\n        setUserToken(response.data.token);\n        localStorage.setItem(\"userData\", JSON.stringify(response.data.user));\n        localStorage.setItem(\"userToken\", response.data.token);\n        console.log(\"login success:\", response.data);\n        return response;\n      }\n    } catch (error) {\n      console.error(\"login Error:\", error.response.data);\n      return error.response.data;\n    }\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    const isLoggedIn = async () => {\n      setIsLoading(true); // Start loading\n      const storedToken = localStorage.getItem(\"userToken\");\n      const storedUser = localStorage.getItem(\"userData\");\n      if (storedToken && storedUser) {\n        setUserToken(storedToken);\n        setUserData(JSON.parse(storedUser));\n      }\n      setIsLoading(false); // End loading\n    };\n  \n    isLoggedIn();\n  }, []);\n\n  return (\n    <UserContext.Provider\n      value={{ signup, login, isLoading, userData, userToken }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}