{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nfunction useLocalStorage(key, initialValue, resetOnError = false) {\n  _s();\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.error(\"Error reading from local storage\", error);\n      if (resetOnError) {\n        window.localStorage.setItem(key, JSON.stringify(initialValue));\n        return initialValue;\n      }\n      return null; // Or return null if the data is corrupted\n    }\n  });\n  const setValue = value => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(\"Error writing to local storage\", error);\n    }\n  };\n  return [storedValue, setValue];\n}\n_s(useLocalStorage, \"SU8aTkInT1O0SC9gGzv+u6wFIOE=\");\nexport default useLocalStorage;","map":{"version":3,"names":["useState","useLocalStorage","key","initialValue","resetOnError","_s","storedValue","setStoredValue","item","window","localStorage","getItem","JSON","parse","error","console","setItem","stringify","setValue","value","valueToStore","Function"],"sources":["/Users/zakariaalmardaee/csfolder/twiscord/frontend/src/context/hooks/useLocalStorage.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nfunction useLocalStorage(key, initialValue, resetOnError = false) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.error(\"Error reading from local storage\", error);\n      if (resetOnError) {\n        window.localStorage.setItem(key, JSON.stringify(initialValue));\n        return initialValue;\n      }\n      return null; // Or return null if the data is corrupted\n    }\n  });\n\n  const setValue = (value) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(\"Error writing to local storage\", error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SAASC,eAAeA,CAACC,GAAG,EAAEC,YAAY,EAAEC,YAAY,GAAG,KAAK,EAAE;EAAAC,EAAA;EAChE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,MAAM;IACnD,IAAI;MACF,MAAMQ,IAAI,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAACT,GAAG,CAAC;MAC7C,OAAOM,IAAI,GAAGI,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC,GAAGL,YAAY;IAC/C,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD,IAAIV,YAAY,EAAE;QAChBK,MAAM,CAACC,YAAY,CAACM,OAAO,CAACd,GAAG,EAAEU,IAAI,CAACK,SAAS,CAACd,YAAY,CAAC,CAAC;QAC9D,OAAOA,YAAY;MACrB;MACA,OAAO,IAAI,CAAC,CAAC;IACf;EACF,CAAC,CAAC;EAEF,MAAMe,QAAQ,GAAIC,KAAK,IAAK;IAC1B,IAAI;MACF,MAAMC,YAAY,GAChBD,KAAK,YAAYE,QAAQ,GAAGF,KAAK,CAACb,WAAW,CAAC,GAAGa,KAAK;MACxDZ,cAAc,CAACa,YAAY,CAAC;MAC5BX,MAAM,CAACC,YAAY,CAACM,OAAO,CAACd,GAAG,EAAEU,IAAI,CAACK,SAAS,CAACG,YAAY,CAAC,CAAC;IAChE,CAAC,CAAC,OAAON,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,OAAO,CAACR,WAAW,EAAEY,QAAQ,CAAC;AAChC;AAACb,EAAA,CA3BQJ,eAAe;AA6BxB,eAAeA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}